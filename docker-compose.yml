services:
  # Backend service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: urina-backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend/models:/app/models
      - ./backend/images:/app/images
    environment:
      - PORT=8000
      - HOST=0.0.0.0
      - DEBUG=False
      - MODEL_PATH=models/40_epochs.pth
    env_file:
      - ./backend/.env
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://127.0.0.1:8000/')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - urina-network

  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: urina-frontend
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=production
      - VITE_API_URL=http://localhost:8000
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - urina-network

  # Reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: urina-proxy
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - urina-network

networks:
  urina-network:
    driver: bridge

volumes:
  models_data:
    driver: local
